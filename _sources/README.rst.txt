.. image:: https://raw.githubusercontent.com/Nekmo/micropython-presentacion/master/logo.png
    :width: 100%

|

.. image:: https://img.shields.io/github/actions/workflow/status/Nekmo/micropython-presentacion/build.yml?style=flat-square&branch=master
  :target: https://github.com/Nekmo/micropython-presentacion/actions?query=workflow%3ABuild
  :alt: Latest CI build status


==================================================================
Micropython: programaci√≥n f√°cil y para todos de microcontroladores
==================================================================
Hasta hace no mucho, para programar microcontroladores requer√≠amos utilizar variantes de lenguajes como C/C++, quedando
fuera de nuestro alcance lenguajes populares y sencillos como Python. No obstante, los nuevos microcontroladores como
ESP32 o Raspberry Pi Pico, m√°s potentes y con mayores recursos, han abierto la puerta a variantes de estos lenguajes,
como es el caso de Micropython. Veremos los primeros pasos, ejemplos pr√°cticos como control de leds, formas de
comunicaci√≥n, instalaci√≥n de paquetes, limitaciones y m√°s. Se recomienda disponer de conocimientos previos de Python,
aunque no es esencial. Si no conoces el mundo de los microcontroladores, ¬°este es tu taller! Micropython es una de las
formas m√°s f√°ciles, c√≥modas, r√°pidas y divertidas de adentrarse.

Veremos c√≥mo emular los circuitos usando Wokwi, una plataforma online para dise√±ar y programar microcontroladores, y
finalmente se ense√±ar√° c√≥mo hacer la pr√°ctica real. Para la programaci√≥n puede utilizarse Viper-ide, un editor online de
Micropython, o esta misma presentaci√≥n, por lo que no ser√° necesario instalar nada.

üìΩÔ∏è La **presentaci√≥n** est√° `disponible online <https://nekmo.github.io/micropython-workshop/>`_ ya compilada
para su visualizaci√≥n.

üíª Si **no funciona el microcontrolador a trav√©s de tu ordenador**, comprueba la
`gu√≠a de resoluci√≥n de problemas <https://github.com/Nekmo/micropython-workshop/blob/master/demos/demo0/TROUBLESHOOTING.rst>`_

‚úèÔ∏è Tienes disponibles todos los **ejemplos pr√°cticos**, incluidos los ejercicios extra que no se ver√°n durante la presentaci√≥n,
en la carpeta `demos <https://github.com/Nekmo/micropython-workshop/tree/master/demos>`_ de este repositorio.


Requisitos y contenido
----------------------
No es necesarios conocimientos previos de microcontroladores, pero s√≠ es recomendable conocer Python, ya que habr√°n
ejercicios pr√°cticos utilizando este lenguaje de programaci√≥n, en su variante Micropython. Esta versi√≥n es compatible
con las versiones est√°ndar de Python, aunque con limitaciones. Este taller se dividir√° en las siguientes secciones:

* Bienvenida e introducci√≥n.
* Aviso sobre necesidad de uso de ordenador y WiFi, y acceso a la presentaci√≥n.
* Simulador online y conexi√≥n al microcontrolador f√≠sico.
* Acerca de m√≠, Nekmo, y nuestra comunidad.
* Qu√© son y para qu√© se usan los microcontroladores.
* Variantes y caracter√≠sticas, centrado en ESP32.
* Qu√© es Micropython.
* Primeros pasos con Micropython y por qu√© usarlo.
* Descanso para que los asistentes terminen de colocarse y conectarse.
* Introducci√≥n a la electr√≥nica y avisos de seguridad.
* Los conectores GPIO y esquema de un microcontrolador.
* Ejercicio de conexi√≥n y uso de un LED. Se resuelve como demostraci√≥n al p√∫blico.
* Ejercicio de LED anal√≥gico. El p√∫blico lo realiza y se resuelve.
* Ejercicio de bot√≥n. El p√∫blico lo realiza y se resuelve.
* Protocolos de comunicaci√≥n.
* Ejercicio de led WS2812. El p√∫blico lo realiza y se resuelve.
* Ejercicio de sensor y pantalla I2C. El p√∫blico lo realiza y se resuelve.
* WiFi, bluetooth y comunicaci√≥n inal√°mbrica.
* C√≥digo y demostraci√≥n de un coche.
* ESP-Now.
* Demostraci√≥n dron teledirigido.
* Punto final a la presentaci√≥n.
* Agradecimientos asociaciones, colaboradores y p√∫blico.
* Formas de contacto.
* Turno de preguntas.


Motivaci√≥n
----------
Ser un punto de introducci√≥n a los microcontroladores y a Micropython, sin necesidad de conocer ninguno de los dos.
Aunque ser√° imposible conocer en profundidad el mundo de los microcontroladores y de Micropython y tan solo 1 hora y
40 minutos que dura el taller, pretende ser un punto de partida para que los asistentes puedan continuar aprendiendo
por su cuenta, y que hayan podido realizar la mayor parte de los ejercicios pr√°cticos durante la presentaci√≥n.

Acerca de
---------
El presente taller se realizar√° para `PyConES <https://2025.es.pycon.org/>`_, con fecha de realizaci√≥n el viernes 17
de octubre de 2025, en Sevilla, Espa√±a. Taller realizado por la comunidad de
`Python M√°laga <https://www.python-malaga.es/>`_.

Compilaci√≥n
-----------
Para compilar desde el c√≥digo fuente se requiere Python 3 instalado, estando probado s√≥lo bajo Python 3.12. Se
recomienda ejecutar los siguientes pasos en un
`virtualenv <https://nekmo.com/es/blog/python-virtualenvs-y-virtualenvwrapper/>`_::

    # Clonar proyecto
    git clone https://github.com/Nekmo/micropython-presentacion.git
    cd micropython-presentacion
    # Instalar dependencias
    pip install -r requirements.txt
    # Compilar ficheros de estilos
    sassc _static/theme.scss _static/theme.css
    # Compilar presentaci√≥n
    make revealjs

Tras la compilaci√≥n puede verse los ficheros resultantes en el directorio ``_build``.

Conferencia
===========
Existe una versi√≥n previa de este taller en formato conferencia, de 45 minutos de duraci√≥n, que puede verse en `github.com/Nekmo/micropython-presentacion <https://github.com/Nekmo/micropython-presentacion>`_.

Copyright
=========
Licencia MIT. Ver fichero ``LICENSE.txt``.

Nekmo 2025.
